<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds1.CommentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.CommentInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="scores" property="scores" jdbcType="INTEGER" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="object_id" property="objectId" jdbcType="BIGINT" />
    <result column="object_type" property="objectType" jdbcType="INTEGER" />
    <result column="sys_cust_id" property="sysCustId" jdbcType="INTEGER" />
    <result column="parent_cust_id" property="parentCustId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lol.common.model.ds1.CommentInfoWithBLOBs" extends="BaseResultMap" >
    <result column="comment_con" property="commentCon" jdbcType="LONGVARCHAR" />
    <result column="reply" property="reply" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, create_time, scores, reply_time, status, object_id, object_type, sys_cust_id, 
    parent_cust_id
  </sql>
  <sql id="Blob_Column_List" >
    comment_con, reply
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lol.common.model.ds1.CommentInfoExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds1.CommentInfoExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.CommentInfoExample" >
    delete from comment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.CommentInfoWithBLOBs" >
    insert into comment_info (id, member_id, create_time, 
      scores, reply_time, status, 
      object_id, object_type, sys_cust_id, 
      parent_cust_id, comment_con, reply
      )
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{scores,jdbcType=INTEGER}, #{replyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{objectId,jdbcType=BIGINT}, #{objectType,jdbcType=INTEGER}, #{sysCustId,jdbcType=INTEGER}, 
      #{parentCustId,jdbcType=INTEGER}, #{commentCon,jdbcType=LONGVARCHAR}, #{reply,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.CommentInfoWithBLOBs" >
    insert into comment_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="scores != null" >
        scores,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="objectId != null" >
        object_id,
      </if>
      <if test="objectType != null" >
        object_type,
      </if>
      <if test="sysCustId != null" >
        sys_cust_id,
      </if>
      <if test="parentCustId != null" >
        parent_cust_id,
      </if>
      <if test="commentCon != null" >
        comment_con,
      </if>
      <if test="reply != null" >
        reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scores != null" >
        #{scores,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="objectId != null" >
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="objectType != null" >
        #{objectType,jdbcType=INTEGER},
      </if>
      <if test="sysCustId != null" >
        #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="commentCon != null" >
        #{commentCon,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.CommentInfoExample" resultType="java.lang.Integer" >
    select count(*) from comment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scores != null" >
        scores = #{record.scores,jdbcType=INTEGER},
      </if>
      <if test="record.replyTime != null" >
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.objectId != null" >
        object_id = #{record.objectId,jdbcType=BIGINT},
      </if>
      <if test="record.objectType != null" >
        object_type = #{record.objectType,jdbcType=INTEGER},
      </if>
      <if test="record.sysCustId != null" >
        sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      </if>
      <if test="record.parentCustId != null" >
        parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      </if>
      <if test="record.commentCon != null" >
        comment_con = #{record.commentCon,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reply != null" >
        reply = #{record.reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update comment_info
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      scores = #{record.scores,jdbcType=INTEGER},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      object_id = #{record.objectId,jdbcType=BIGINT},
      object_type = #{record.objectType,jdbcType=INTEGER},
      sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      comment_con = #{record.commentCon,jdbcType=LONGVARCHAR},
      reply = #{record.reply,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment_info
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      scores = #{record.scores,jdbcType=INTEGER},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      object_id = #{record.objectId,jdbcType=BIGINT},
      object_type = #{record.objectType,jdbcType=INTEGER},
      sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.CommentInfoWithBLOBs" >
    update comment_info
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scores != null" >
        scores = #{scores,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="objectId != null" >
        object_id = #{objectId,jdbcType=BIGINT},
      </if>
      <if test="objectType != null" >
        object_type = #{objectType,jdbcType=INTEGER},
      </if>
      <if test="sysCustId != null" >
        sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="commentCon != null" >
        comment_con = #{commentCon,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lol.common.model.ds1.CommentInfoWithBLOBs" >
    update comment_info
    set member_id = #{memberId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      scores = #{scores,jdbcType=INTEGER},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      object_id = #{objectId,jdbcType=BIGINT},
      object_type = #{objectType,jdbcType=INTEGER},
      sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      comment_con = #{commentCon,jdbcType=LONGVARCHAR},
      reply = #{reply,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.CommentInfo" >
    update comment_info
    set member_id = #{memberId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      scores = #{scores,jdbcType=INTEGER},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      object_id = #{objectId,jdbcType=BIGINT},
      object_type = #{objectType,jdbcType=INTEGER},
      sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>