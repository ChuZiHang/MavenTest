<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds1.CourseInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.CourseInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="class_img" property="classImg" jdbcType="VARCHAR" />
    <result column="course_rate" property="courseRate" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sys_cust_id" property="sysCustId" jdbcType="INTEGER" />
    <result column="parent_cust_id" property="parentCustId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="REAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lol.common.model.ds1.CourseInfo" extends="BaseResultMap" >
    <result column="class_desc" property="classDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, class_name, class_img, course_rate, create_time, status, sys_cust_id, parent_cust_id, 
    score
  </sql>
  <sql id="Blob_Column_List" >
    class_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lol.common.model.ds1.CourseInfoExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds1.CourseInfoExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.CourseInfoExample" >
    delete from course_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.CourseInfo" >
    insert into course_info (id, class_name, class_img, 
      course_rate, create_time, status, 
      sys_cust_id, parent_cust_id, score, 
      class_desc)
    values (#{id,jdbcType=BIGINT}, #{className,jdbcType=VARCHAR}, #{classImg,jdbcType=VARCHAR}, 
      #{courseRate,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{sysCustId,jdbcType=INTEGER}, #{parentCustId,jdbcType=INTEGER}, #{score,jdbcType=REAL}, 
      #{classDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.CourseInfo" >
    insert into course_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="classImg != null" >
        class_img,
      </if>
      <if test="courseRate != null" >
        course_rate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sysCustId != null" >
        sys_cust_id,
      </if>
      <if test="parentCustId != null" >
        parent_cust_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="classDesc != null" >
        class_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classImg != null" >
        #{classImg,jdbcType=VARCHAR},
      </if>
      <if test="courseRate != null" >
        #{courseRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sysCustId != null" >
        #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="classDesc != null" >
        #{classDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.CourseInfoExample" resultType="java.lang.Integer" >
    select count(*) from course_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.className != null" >
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.classImg != null" >
        class_img = #{record.classImg,jdbcType=VARCHAR},
      </if>
      <if test="record.courseRate != null" >
        course_rate = #{record.courseRate,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sysCustId != null" >
        sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      </if>
      <if test="record.parentCustId != null" >
        parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=REAL},
      </if>
      <if test="record.classDesc != null" >
        class_desc = #{record.classDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update course_info
    set id = #{record.id,jdbcType=BIGINT},
      class_name = #{record.className,jdbcType=VARCHAR},
      class_img = #{record.classImg,jdbcType=VARCHAR},
      course_rate = #{record.courseRate,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=REAL},
      class_desc = #{record.classDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_info
    set id = #{record.id,jdbcType=BIGINT},
      class_name = #{record.className,jdbcType=VARCHAR},
      class_img = #{record.classImg,jdbcType=VARCHAR},
      course_rate = #{record.courseRate,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.CourseInfo" >
    update course_info
    <set >
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classImg != null" >
        class_img = #{classImg,jdbcType=VARCHAR},
      </if>
      <if test="courseRate != null" >
        course_rate = #{courseRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sysCustId != null" >
        sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="classDesc != null" >
        class_desc = #{classDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lol.common.model.ds1.CourseInfo" >
    update course_info
    set class_name = #{className,jdbcType=VARCHAR},
      class_img = #{classImg,jdbcType=VARCHAR},
      course_rate = #{courseRate,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      class_desc = #{classDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.CourseInfo" >
    update course_info
    set class_name = #{className,jdbcType=VARCHAR},
      class_img = #{classImg,jdbcType=VARCHAR},
      course_rate = #{courseRate,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>