<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds1.ExerciseLogMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.ExerciseLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="ryx_id" property="ryxId" jdbcType="VARCHAR" />
    <result column="distance" property="distance" jdbcType="DOUBLE" />
    <result column="cal" property="cal" jdbcType="DOUBLE" />
    <result column="speed" property="speed" jdbcType="DOUBLE" />
    <result column="run_time" property="runTime" jdbcType="DOUBLE" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, ryx_id, distance, cal, speed, run_time, device_id, login_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds1.ExerciseLogExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exercise_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from exercise_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from exercise_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.ExerciseLogExample" >
    delete from exercise_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.ExerciseLog" >
    insert into exercise_log (id, member_id, ryx_id, 
      distance, cal, speed, 
      run_time, device_id, login_time, 
      end_time)
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{ryxId,jdbcType=VARCHAR}, 
      #{distance,jdbcType=DOUBLE}, #{cal,jdbcType=DOUBLE}, #{speed,jdbcType=DOUBLE}, 
      #{runTime,jdbcType=DOUBLE}, #{deviceId,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.ExerciseLog" >
    insert into exercise_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="ryxId != null" >
        ryx_id,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="cal != null" >
        cal,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="runTime != null" >
        run_time,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="ryxId != null" >
        #{ryxId,jdbcType=VARCHAR},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=DOUBLE},
      </if>
      <if test="cal != null" >
        #{cal,jdbcType=DOUBLE},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=DOUBLE},
      </if>
      <if test="runTime != null" >
        #{runTime,jdbcType=DOUBLE},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.ExerciseLogExample" resultType="java.lang.Integer" >
    select count(*) from exercise_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exercise_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.ryxId != null" >
        ryx_id = #{record.ryxId,jdbcType=VARCHAR},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=DOUBLE},
      </if>
      <if test="record.cal != null" >
        cal = #{record.cal,jdbcType=DOUBLE},
      </if>
      <if test="record.speed != null" >
        speed = #{record.speed,jdbcType=DOUBLE},
      </if>
      <if test="record.runTime != null" >
        run_time = #{record.runTime,jdbcType=DOUBLE},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exercise_log
    set id = #{record.id,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=BIGINT},
      ryx_id = #{record.ryxId,jdbcType=VARCHAR},
      distance = #{record.distance,jdbcType=DOUBLE},
      cal = #{record.cal,jdbcType=DOUBLE},
      speed = #{record.speed,jdbcType=DOUBLE},
      run_time = #{record.runTime,jdbcType=DOUBLE},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.ExerciseLog" >
    update exercise_log
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="ryxId != null" >
        ryx_id = #{ryxId,jdbcType=VARCHAR},
      </if>
      <if test="distance != null" >
        distance = #{distance,jdbcType=DOUBLE},
      </if>
      <if test="cal != null" >
        cal = #{cal,jdbcType=DOUBLE},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=DOUBLE},
      </if>
      <if test="runTime != null" >
        run_time = #{runTime,jdbcType=DOUBLE},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.ExerciseLog" >
    update exercise_log
    set member_id = #{memberId,jdbcType=BIGINT},
      ryx_id = #{ryxId,jdbcType=VARCHAR},
      distance = #{distance,jdbcType=DOUBLE},
      cal = #{cal,jdbcType=DOUBLE},
      speed = #{speed,jdbcType=DOUBLE},
      run_time = #{runTime,jdbcType=DOUBLE},
      device_id = #{deviceId,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>