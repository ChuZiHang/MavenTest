<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds0.SysAuthRuleMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds0.SysAuthRule" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="filter_path" property="filterPath" jdbcType="VARCHAR" />
    <result column="filter_chain" property="filterChain" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, filter_path, filter_chain, priority, app_id, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds0.SysAuthRuleExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_auth_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_auth_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_auth_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds0.SysAuthRuleExample" >
    delete from sys_auth_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds0.SysAuthRule" >
    insert into sys_auth_rule (id, filter_path, filter_chain, 
      priority, app_id, status
      )
    values (#{id,jdbcType=BIGINT}, #{filterPath,jdbcType=VARCHAR}, #{filterChain,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{appId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds0.SysAuthRule" >
    insert into sys_auth_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="filterPath != null" >
        filter_path,
      </if>
      <if test="filterChain != null" >
        filter_chain,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="filterPath != null" >
        #{filterPath,jdbcType=VARCHAR},
      </if>
      <if test="filterChain != null" >
        #{filterChain,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds0.SysAuthRuleExample" resultType="java.lang.Integer" >
    select count(*) from sys_auth_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_auth_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.filterPath != null" >
        filter_path = #{record.filterPath,jdbcType=VARCHAR},
      </if>
      <if test="record.filterChain != null" >
        filter_chain = #{record.filterChain,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null" >
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_auth_rule
    set id = #{record.id,jdbcType=BIGINT},
      filter_path = #{record.filterPath,jdbcType=VARCHAR},
      filter_chain = #{record.filterChain,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds0.SysAuthRule" >
    update sys_auth_rule
    <set >
      <if test="filterPath != null" >
        filter_path = #{filterPath,jdbcType=VARCHAR},
      </if>
      <if test="filterChain != null" >
        filter_chain = #{filterChain,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds0.SysAuthRule" >
    update sys_auth_rule
    set filter_path = #{filterPath,jdbcType=VARCHAR},
      filter_chain = #{filterChain,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>