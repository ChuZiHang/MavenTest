<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds1.MemberInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.MemberInfo" >
    <id column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="link_phone" property="linkPhone" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="ksid" property="ksid" jdbcType="VARCHAR" />
    <result column="member_nick" property="memberNick" jdbcType="VARCHAR" />
    <result column="member_logo" property="memberLogo" jdbcType="VARCHAR" />
    <result column="member_sex" property="memberSex" jdbcType="INTEGER" />
    <result column="card_num" property="cardNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="sys_cust_id" property="sysCustId" jdbcType="INTEGER" />
    <result column="parent_cust_id" property="parentCustId" jdbcType="INTEGER" />
    <result column="is_appoint" property="isAppoint" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="blacklist_status" property="blacklistStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    member_id, member_name, link_phone, open_id, ksid, member_nick, member_logo, member_sex, 
    card_num, create_time, sys_cust_id, parent_cust_id, is_appoint, source, birthday, 
    height, weight, blacklist_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds1.MemberInfoExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_info
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_info
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.MemberInfoExample" >
    delete from member_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.MemberInfo" >
    insert into member_info (member_id, member_name, link_phone, 
      open_id, ksid, member_nick, 
      member_logo, member_sex, card_num, 
      create_time, sys_cust_id, parent_cust_id, 
      is_appoint, source, birthday, 
      height, weight, blacklist_status
      )
    values (#{memberId,jdbcType=BIGINT}, #{memberName,jdbcType=VARCHAR}, #{linkPhone,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{ksid,jdbcType=VARCHAR}, #{memberNick,jdbcType=VARCHAR}, 
      #{memberLogo,jdbcType=VARCHAR}, #{memberSex,jdbcType=INTEGER}, #{cardNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{sysCustId,jdbcType=INTEGER}, #{parentCustId,jdbcType=INTEGER}, 
      #{isAppoint,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, 
      #{height,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{blacklistStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.MemberInfo" >
    insert into member_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="linkPhone != null" >
        link_phone,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="ksid != null" >
        ksid,
      </if>
      <if test="memberNick != null" >
        member_nick,
      </if>
      <if test="memberLogo != null" >
        member_logo,
      </if>
      <if test="memberSex != null" >
        member_sex,
      </if>
      <if test="cardNum != null" >
        card_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sysCustId != null" >
        sys_cust_id,
      </if>
      <if test="parentCustId != null" >
        parent_cust_id,
      </if>
      <if test="isAppoint != null" >
        is_appoint,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="blacklistStatus != null" >
        blacklist_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null" >
        #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="ksid != null" >
        #{ksid,jdbcType=VARCHAR},
      </if>
      <if test="memberNick != null" >
        #{memberNick,jdbcType=VARCHAR},
      </if>
      <if test="memberLogo != null" >
        #{memberLogo,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        #{memberSex,jdbcType=INTEGER},
      </if>
      <if test="cardNum != null" >
        #{cardNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCustId != null" >
        #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="isAppoint != null" >
        #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null" >
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="blacklistStatus != null" >
        #{blacklistStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.MemberInfoExample" resultType="java.lang.Integer" >
    select count(*) from member_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_info
    <set >
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberName != null" >
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkPhone != null" >
        link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.ksid != null" >
        ksid = #{record.ksid,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNick != null" >
        member_nick = #{record.memberNick,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLogo != null" >
        member_logo = #{record.memberLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberSex != null" >
        member_sex = #{record.memberSex,jdbcType=INTEGER},
      </if>
      <if test="record.cardNum != null" >
        card_num = #{record.cardNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sysCustId != null" >
        sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      </if>
      <if test="record.parentCustId != null" >
        parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      </if>
      <if test="record.isAppoint != null" >
        is_appoint = #{record.isAppoint,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.blacklistStatus != null" >
        blacklist_status = #{record.blacklistStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_info
    set member_id = #{record.memberId,jdbcType=BIGINT},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      ksid = #{record.ksid,jdbcType=VARCHAR},
      member_nick = #{record.memberNick,jdbcType=VARCHAR},
      member_logo = #{record.memberLogo,jdbcType=VARCHAR},
      member_sex = #{record.memberSex,jdbcType=INTEGER},
      card_num = #{record.cardNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      sys_cust_id = #{record.sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      is_appoint = #{record.isAppoint,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      blacklist_status = #{record.blacklistStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.MemberInfo" >
    update member_info
    <set >
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null" >
        link_phone = #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="ksid != null" >
        ksid = #{ksid,jdbcType=VARCHAR},
      </if>
      <if test="memberNick != null" >
        member_nick = #{memberNick,jdbcType=VARCHAR},
      </if>
      <if test="memberLogo != null" >
        member_logo = #{memberLogo,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        member_sex = #{memberSex,jdbcType=INTEGER},
      </if>
      <if test="cardNum != null" >
        card_num = #{cardNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCustId != null" >
        sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      </if>
      <if test="parentCustId != null" >
        parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="isAppoint != null" >
        is_appoint = #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="blacklistStatus != null" >
        blacklist_status = #{blacklistStatus,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.MemberInfo" >
    update member_info
    set member_name = #{memberName,jdbcType=VARCHAR},
      link_phone = #{linkPhone,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      ksid = #{ksid,jdbcType=VARCHAR},
      member_nick = #{memberNick,jdbcType=VARCHAR},
      member_logo = #{memberLogo,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=INTEGER},
      card_num = #{cardNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sys_cust_id = #{sysCustId,jdbcType=INTEGER},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      is_appoint = #{isAppoint,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      blacklist_status = #{blacklistStatus,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>