<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lol.common.mapper.ds1.OrderConsumeLogMapper" >
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.OrderConsumeLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="pay_money" property="payMoney" jdbcType="INTEGER" />
    <result column="deposit" property="deposit" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="parent_cust_id" property="parentCustId" jdbcType="INTEGER" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="is_online" property="isOnline" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, pay_money, deposit, pay_type, create_time, parent_cust_id, memo, is_online
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lol.common.model.ds1.OrderConsumeLogExample" >
    <include refid="pagePrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_consume_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_consume_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_consume_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.OrderConsumeLogExample" >
    delete from order_consume_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.OrderConsumeLog" >
    insert into order_consume_log (id, order_id, pay_money, 
      deposit, pay_type, create_time, 
      parent_cust_id, memo, is_online
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{payMoney,jdbcType=INTEGER}, 
      #{deposit,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{parentCustId,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}, #{isOnline,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.OrderConsumeLog" >
    insert into order_consume_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="parentCustId != null" >
        parent_cust_id,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="isOnline != null" >
        is_online,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentCustId != null" >
        #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null" >
        #{isOnline,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.OrderConsumeLogExample" resultType="java.lang.Integer" >
    select count(*) from order_consume_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_consume_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.payMoney != null" >
        pay_money = #{record.payMoney,jdbcType=INTEGER},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.parentCustId != null" >
        parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnline != null" >
        is_online = #{record.isOnline,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_consume_log
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      pay_money = #{record.payMoney,jdbcType=INTEGER},
      deposit = #{record.deposit,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      parent_cust_id = #{record.parentCustId,jdbcType=INTEGER},
      memo = #{record.memo,jdbcType=VARCHAR},
      is_online = #{record.isOnline,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.OrderConsumeLog" >
    update order_consume_log
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentCustId != null" >
        parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null" >
        is_online = #{isOnline,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.OrderConsumeLog" >
    update order_consume_log
    set order_id = #{orderId,jdbcType=BIGINT},
      pay_money = #{payMoney,jdbcType=INTEGER},
      deposit = #{deposit,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      parent_cust_id = #{parentCustId,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      is_online = #{isOnline,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>