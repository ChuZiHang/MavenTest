<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lol.common.mapper.ds1.PayBalanceMapper">
  <resultMap id="BaseResultMap" type="com.lol.common.model.ds1.PayBalance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="pay_service_id" jdbcType="BIGINT" property="payServiceId" />
    <result column="pay_service_account" jdbcType="VARCHAR" property="payServiceAccount" />
    <result column="pay_service_order_id" jdbcType="VARCHAR" property="payServiceOrderId" />
    <result column="product_order_id" jdbcType="VARCHAR" property="productOrderId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_num" jdbcType="INTEGER" property="productNum" />
    <result column="product_type" jdbcType="BIGINT" property="productType" />
    <result column="cust_id" jdbcType="BIGINT" property="custId" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_service_account" jdbcType="VARCHAR" property="memberServiceAccount" />
    <result column="submit_date" jdbcType="TIMESTAMP" property="submitDate" />
    <result column="service_called_date" jdbcType="TIMESTAMP" property="serviceCalledDate" />
    <result column="start_callback_date" jdbcType="TIMESTAMP" property="startCallbackDate" />
    <result column="last_callback_date" jdbcType="TIMESTAMP" property="lastCallbackDate" />
    <result column="pay_tax" jdbcType="DOUBLE" property="payTax" />
    <result column="pay_amount" jdbcType="BIGINT" property="payAmount" />
    <result column="payed_amount" jdbcType="BIGINT" property="payedAmount" />
    <result column="invoiced_amount" jdbcType="BIGINT" property="invoicedAmount" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="callback_status" jdbcType="INTEGER" property="callbackStatus" />
    <result column="extend_param" jdbcType="VARCHAR" property="extendParam" />
    <result column="service_invoiced_amount" jdbcType="BIGINT" property="serviceInvoicedAmount" />
    <result column="callback_num" jdbcType="INTEGER" property="callbackNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lol.common.model.ds1.PayBalanceWithBLOBs">
    <result column="user_remark" jdbcType="LONGVARCHAR" property="userRemark" />
    <result column="sys_remark" jdbcType="LONGVARCHAR" property="sysRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, pay_service_id, pay_service_account, pay_service_order_id, product_order_id, 
    product_name, product_num, product_type, cust_id, member_id, member_name, member_service_account, 
    submit_date, service_called_date, start_callback_date, last_callback_date, pay_tax, 
    pay_amount, payed_amount, invoiced_amount, pay_status, callback_status, extend_param, 
    service_invoiced_amount, callback_num
  </sql>
  <sql id="Blob_Column_List">
    user_remark, sys_remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lol.common.model.ds1.PayBalanceExample" resultMap="ResultMapWithBLOBs">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pay_balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByExample" parameterType="com.lol.common.model.ds1.PayBalanceExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pay_balance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_balance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lol.common.model.ds1.PayBalanceExample">
    delete from pay_balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lol.common.model.ds1.PayBalanceWithBLOBs">
    insert into pay_balance (id, parent_id, pay_service_id, 
      pay_service_account, pay_service_order_id, product_order_id, 
      product_name, product_num, product_type, 
      cust_id, member_id, member_name, 
      member_service_account, submit_date, service_called_date, 
      start_callback_date, last_callback_date, 
      pay_tax, pay_amount, payed_amount, 
      invoiced_amount, pay_status, callback_status, 
      extend_param, service_invoiced_amount, callback_num, 
      user_remark, sys_remark)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{payServiceId,jdbcType=BIGINT}, 
      #{payServiceAccount,jdbcType=VARCHAR}, #{payServiceOrderId,jdbcType=VARCHAR}, #{productOrderId,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{productNum,jdbcType=INTEGER}, #{productType,jdbcType=BIGINT}, 
      #{custId,jdbcType=BIGINT}, #{memberId,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{memberServiceAccount,jdbcType=VARCHAR}, #{submitDate,jdbcType=TIMESTAMP}, #{serviceCalledDate,jdbcType=TIMESTAMP}, 
      #{startCallbackDate,jdbcType=TIMESTAMP}, #{lastCallbackDate,jdbcType=TIMESTAMP}, 
      #{payTax,jdbcType=DOUBLE}, #{payAmount,jdbcType=BIGINT}, #{payedAmount,jdbcType=BIGINT}, 
      #{invoicedAmount,jdbcType=BIGINT}, #{payStatus,jdbcType=INTEGER}, #{callbackStatus,jdbcType=INTEGER}, 
      #{extendParam,jdbcType=VARCHAR}, #{serviceInvoicedAmount,jdbcType=BIGINT}, #{callbackNum,jdbcType=INTEGER}, 
      #{userRemark,jdbcType=LONGVARCHAR}, #{sysRemark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lol.common.model.ds1.PayBalanceWithBLOBs">
    insert into pay_balance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="payServiceId != null">
        pay_service_id,
      </if>
      <if test="payServiceAccount != null">
        pay_service_account,
      </if>
      <if test="payServiceOrderId != null">
        pay_service_order_id,
      </if>
      <if test="productOrderId != null">
        product_order_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productNum != null">
        product_num,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberServiceAccount != null">
        member_service_account,
      </if>
      <if test="submitDate != null">
        submit_date,
      </if>
      <if test="serviceCalledDate != null">
        service_called_date,
      </if>
      <if test="startCallbackDate != null">
        start_callback_date,
      </if>
      <if test="lastCallbackDate != null">
        last_callback_date,
      </if>
      <if test="payTax != null">
        pay_tax,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payedAmount != null">
        payed_amount,
      </if>
      <if test="invoicedAmount != null">
        invoiced_amount,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="callbackStatus != null">
        callback_status,
      </if>
      <if test="extendParam != null">
        extend_param,
      </if>
      <if test="serviceInvoicedAmount != null">
        service_invoiced_amount,
      </if>
      <if test="callbackNum != null">
        callback_num,
      </if>
      <if test="userRemark != null">
        user_remark,
      </if>
      <if test="sysRemark != null">
        sys_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="payServiceId != null">
        #{payServiceId,jdbcType=BIGINT},
      </if>
      <if test="payServiceAccount != null">
        #{payServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="payServiceOrderId != null">
        #{payServiceOrderId,jdbcType=VARCHAR},
      </if>
      <if test="productOrderId != null">
        #{productOrderId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productNum != null">
        #{productNum,jdbcType=INTEGER},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=BIGINT},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberServiceAccount != null">
        #{memberServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="submitDate != null">
        #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceCalledDate != null">
        #{serviceCalledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startCallbackDate != null">
        #{startCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastCallbackDate != null">
        #{lastCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payTax != null">
        #{payTax,jdbcType=DOUBLE},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=BIGINT},
      </if>
      <if test="payedAmount != null">
        #{payedAmount,jdbcType=BIGINT},
      </if>
      <if test="invoicedAmount != null">
        #{invoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="callbackStatus != null">
        #{callbackStatus,jdbcType=INTEGER},
      </if>
      <if test="extendParam != null">
        #{extendParam,jdbcType=VARCHAR},
      </if>
      <if test="serviceInvoicedAmount != null">
        #{serviceInvoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="callbackNum != null">
        #{callbackNum,jdbcType=INTEGER},
      </if>
      <if test="userRemark != null">
        #{userRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="sysRemark != null">
        #{sysRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lol.common.model.ds1.PayBalanceExample" resultType="java.lang.Integer">
    select count(*) from pay_balance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_balance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.payServiceId != null">
        pay_service_id = #{record.payServiceId,jdbcType=BIGINT},
      </if>
      <if test="record.payServiceAccount != null">
        pay_service_account = #{record.payServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payServiceOrderId != null">
        pay_service_order_id = #{record.payServiceOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.productOrderId != null">
        product_order_id = #{record.productOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productNum != null">
        product_num = #{record.productNum,jdbcType=INTEGER},
      </if>
      <if test="record.productType != null">
        product_type = #{record.productType,jdbcType=BIGINT},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberServiceAccount != null">
        member_service_account = #{record.memberServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.submitDate != null">
        submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceCalledDate != null">
        service_called_date = #{record.serviceCalledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startCallbackDate != null">
        start_callback_date = #{record.startCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastCallbackDate != null">
        last_callback_date = #{record.lastCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTax != null">
        pay_tax = #{record.payTax,jdbcType=DOUBLE},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=BIGINT},
      </if>
      <if test="record.payedAmount != null">
        payed_amount = #{record.payedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.invoicedAmount != null">
        invoiced_amount = #{record.invoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.callbackStatus != null">
        callback_status = #{record.callbackStatus,jdbcType=INTEGER},
      </if>
      <if test="record.extendParam != null">
        extend_param = #{record.extendParam,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceInvoicedAmount != null">
        service_invoiced_amount = #{record.serviceInvoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.callbackNum != null">
        callback_num = #{record.callbackNum,jdbcType=INTEGER},
      </if>
      <if test="record.userRemark != null">
        user_remark = #{record.userRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sysRemark != null">
        sys_remark = #{record.sysRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update pay_balance
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      pay_service_id = #{record.payServiceId,jdbcType=BIGINT},
      pay_service_account = #{record.payServiceAccount,jdbcType=VARCHAR},
      pay_service_order_id = #{record.payServiceOrderId,jdbcType=VARCHAR},
      product_order_id = #{record.productOrderId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_num = #{record.productNum,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=BIGINT},
      cust_id = #{record.custId,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_service_account = #{record.memberServiceAccount,jdbcType=VARCHAR},
      submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      service_called_date = #{record.serviceCalledDate,jdbcType=TIMESTAMP},
      start_callback_date = #{record.startCallbackDate,jdbcType=TIMESTAMP},
      last_callback_date = #{record.lastCallbackDate,jdbcType=TIMESTAMP},
      pay_tax = #{record.payTax,jdbcType=DOUBLE},
      pay_amount = #{record.payAmount,jdbcType=BIGINT},
      payed_amount = #{record.payedAmount,jdbcType=BIGINT},
      invoiced_amount = #{record.invoicedAmount,jdbcType=BIGINT},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      callback_status = #{record.callbackStatus,jdbcType=INTEGER},
      extend_param = #{record.extendParam,jdbcType=VARCHAR},
      service_invoiced_amount = #{record.serviceInvoicedAmount,jdbcType=BIGINT},
      callback_num = #{record.callbackNum,jdbcType=INTEGER},
      user_remark = #{record.userRemark,jdbcType=LONGVARCHAR},
      sys_remark = #{record.sysRemark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_balance
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      pay_service_id = #{record.payServiceId,jdbcType=BIGINT},
      pay_service_account = #{record.payServiceAccount,jdbcType=VARCHAR},
      pay_service_order_id = #{record.payServiceOrderId,jdbcType=VARCHAR},
      product_order_id = #{record.productOrderId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_num = #{record.productNum,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=BIGINT},
      cust_id = #{record.custId,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_service_account = #{record.memberServiceAccount,jdbcType=VARCHAR},
      submit_date = #{record.submitDate,jdbcType=TIMESTAMP},
      service_called_date = #{record.serviceCalledDate,jdbcType=TIMESTAMP},
      start_callback_date = #{record.startCallbackDate,jdbcType=TIMESTAMP},
      last_callback_date = #{record.lastCallbackDate,jdbcType=TIMESTAMP},
      pay_tax = #{record.payTax,jdbcType=DOUBLE},
      pay_amount = #{record.payAmount,jdbcType=BIGINT},
      payed_amount = #{record.payedAmount,jdbcType=BIGINT},
      invoiced_amount = #{record.invoicedAmount,jdbcType=BIGINT},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      callback_status = #{record.callbackStatus,jdbcType=INTEGER},
      extend_param = #{record.extendParam,jdbcType=VARCHAR},
      service_invoiced_amount = #{record.serviceInvoicedAmount,jdbcType=BIGINT},
      callback_num = #{record.callbackNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lol.common.model.ds1.PayBalanceWithBLOBs">
    update pay_balance
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="payServiceId != null">
        pay_service_id = #{payServiceId,jdbcType=BIGINT},
      </if>
      <if test="payServiceAccount != null">
        pay_service_account = #{payServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="payServiceOrderId != null">
        pay_service_order_id = #{payServiceOrderId,jdbcType=VARCHAR},
      </if>
      <if test="productOrderId != null">
        product_order_id = #{productOrderId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productNum != null">
        product_num = #{productNum,jdbcType=INTEGER},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=BIGINT},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberServiceAccount != null">
        member_service_account = #{memberServiceAccount,jdbcType=VARCHAR},
      </if>
      <if test="submitDate != null">
        submit_date = #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceCalledDate != null">
        service_called_date = #{serviceCalledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startCallbackDate != null">
        start_callback_date = #{startCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastCallbackDate != null">
        last_callback_date = #{lastCallbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payTax != null">
        pay_tax = #{payTax,jdbcType=DOUBLE},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=BIGINT},
      </if>
      <if test="payedAmount != null">
        payed_amount = #{payedAmount,jdbcType=BIGINT},
      </if>
      <if test="invoicedAmount != null">
        invoiced_amount = #{invoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="callbackStatus != null">
        callback_status = #{callbackStatus,jdbcType=INTEGER},
      </if>
      <if test="extendParam != null">
        extend_param = #{extendParam,jdbcType=VARCHAR},
      </if>
      <if test="serviceInvoicedAmount != null">
        service_invoiced_amount = #{serviceInvoicedAmount,jdbcType=BIGINT},
      </if>
      <if test="callbackNum != null">
        callback_num = #{callbackNum,jdbcType=INTEGER},
      </if>
      <if test="userRemark != null">
        user_remark = #{userRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="sysRemark != null">
        sys_remark = #{sysRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lol.common.model.ds1.PayBalanceWithBLOBs">
    update pay_balance
    set parent_id = #{parentId,jdbcType=BIGINT},
      pay_service_id = #{payServiceId,jdbcType=BIGINT},
      pay_service_account = #{payServiceAccount,jdbcType=VARCHAR},
      pay_service_order_id = #{payServiceOrderId,jdbcType=VARCHAR},
      product_order_id = #{productOrderId,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_num = #{productNum,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=BIGINT},
      cust_id = #{custId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_service_account = #{memberServiceAccount,jdbcType=VARCHAR},
      submit_date = #{submitDate,jdbcType=TIMESTAMP},
      service_called_date = #{serviceCalledDate,jdbcType=TIMESTAMP},
      start_callback_date = #{startCallbackDate,jdbcType=TIMESTAMP},
      last_callback_date = #{lastCallbackDate,jdbcType=TIMESTAMP},
      pay_tax = #{payTax,jdbcType=DOUBLE},
      pay_amount = #{payAmount,jdbcType=BIGINT},
      payed_amount = #{payedAmount,jdbcType=BIGINT},
      invoiced_amount = #{invoicedAmount,jdbcType=BIGINT},
      pay_status = #{payStatus,jdbcType=INTEGER},
      callback_status = #{callbackStatus,jdbcType=INTEGER},
      extend_param = #{extendParam,jdbcType=VARCHAR},
      service_invoiced_amount = #{serviceInvoicedAmount,jdbcType=BIGINT},
      callback_num = #{callbackNum,jdbcType=INTEGER},
      user_remark = #{userRemark,jdbcType=LONGVARCHAR},
      sys_remark = #{sysRemark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lol.common.model.ds1.PayBalance">
    update pay_balance
    set parent_id = #{parentId,jdbcType=BIGINT},
      pay_service_id = #{payServiceId,jdbcType=BIGINT},
      pay_service_account = #{payServiceAccount,jdbcType=VARCHAR},
      pay_service_order_id = #{payServiceOrderId,jdbcType=VARCHAR},
      product_order_id = #{productOrderId,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_num = #{productNum,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=BIGINT},
      cust_id = #{custId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_service_account = #{memberServiceAccount,jdbcType=VARCHAR},
      submit_date = #{submitDate,jdbcType=TIMESTAMP},
      service_called_date = #{serviceCalledDate,jdbcType=TIMESTAMP},
      start_callback_date = #{startCallbackDate,jdbcType=TIMESTAMP},
      last_callback_date = #{lastCallbackDate,jdbcType=TIMESTAMP},
      pay_tax = #{payTax,jdbcType=DOUBLE},
      pay_amount = #{payAmount,jdbcType=BIGINT},
      payed_amount = #{payedAmount,jdbcType=BIGINT},
      invoiced_amount = #{invoicedAmount,jdbcType=BIGINT},
      pay_status = #{payStatus,jdbcType=INTEGER},
      callback_status = #{callbackStatus,jdbcType=INTEGER},
      extend_param = #{extendParam,jdbcType=VARCHAR},
      service_invoiced_amount = #{serviceInvoicedAmount,jdbcType=BIGINT},
      callback_num = #{callbackNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>